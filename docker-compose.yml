version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    env_file:
       - ./apps/backend/.env
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages/shared:/app/packages/shared
      - ./packages/schemas:/app/packages/schemas
      - ./yarn.lock:/app/yarn.lock
      - ./apps/backend/.env:/app/apps/backend/.env
    ports:
      - '${PORT}:${PORT}'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
    command: yarn workspace backend dev

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
      POSTGRESS_EXPOSE_PORT=7001: ${POSTGRESS_EXPOSE_PORT}
    volumes:
      - monolith_db:/var/lib/postgresql/data
    ports:
      - '${POSTGRESS_EXPOSE_PORT}:${POSTGRES_PORT}'
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: ${PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION}
      PGADMIN_CONFIG_ALLOW_SAVE_PASSWORD: ${PGADMIN_CONFIG_ALLOW_SAVE_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    depends_on:
      - postgres
    volumes:
      - monolith_pgadmin_data:/var/lib/pgadmin

volumes:
  monolith_db:
  monolith_pgadmin_data:
